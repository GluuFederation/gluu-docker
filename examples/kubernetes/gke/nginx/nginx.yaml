apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress-base
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/app-root: "/identity"
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /
        backend:
          serviceName: oxtrust
          servicePort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress-openid-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/openid-configuration /oxauth/.well-known/openid-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/.well-known/openid-configuration
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /.well-known/openid-configuration
        backend:
          serviceName: oxauth
          servicePort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress-uma2-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/uma2-configuration /oxauth/restv1/uma2-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/restv1/uma2-configuration
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /.well-known/uma2-configuration
        backend:
          serviceName: oxauth
          servicePort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress-webfinger
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/webfinger /oxauth/.well-known/webfinger$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/.well-known/webfinger
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /.well-known/webfinger
        backend:
          serviceName: oxauth
          servicePort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress-simple-web-discovery
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/simple-web-discovery /oxauth/.well-known/simple-web-discovery$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/.well-known/simple-web-discovery
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /.well-known/simple-web-discovery
        backend:
          serviceName: oxauth
          servicePort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress-scim-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/scim-configuration /identity/restv1/scim-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /identity/restv1/scim-configuration
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /.well-known/scim-configuration
        backend:
          serviceName: oxtrust
          servicePort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress-fido-u2f-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/fido-u2f-configuration /oxauth/restv1/fido-u2f-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /oxauth/restv1/fido-u2f-configuration
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /.well-known/fido-u2f-configuration
        backend:
          serviceName: oxauth
          servicePort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gluu-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "oxauth,oxtrust"
spec:
  tls:
    - hosts:
      - kube.gluu.local
      secretName: tls-certificate
  rules:
  - host: kube.gluu.local
    http:
      paths:
      - path: /identity
        backend:
          serviceName: oxtrust
          servicePort: 8080
      - path: /oxauth
        backend:
          serviceName: oxauth
          servicePort: 8080
      # - path: /idp
      #   backend:
      #     serviceName: oxshibboleth
      #     servicePort: 8080
      - path: /passport
        backend:
          serviceName: oxpassport
          servicePort: 8090
